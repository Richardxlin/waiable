def grid_for(:id, :rows => 2, :columns => 2)
end

grid_for(:grid1, :data => [["Grid cell 1", "Grid cell 2"], ["Grid cell 3", "Grid cell 4"]], :readonly => true)
grid_for(:grid_2, :data => [["Pramod wagh", "pramodwagh@gmail.com", "9881457875"], ["Nitin Dhaware", "nitindhaware@gmail.com", "9887456521"]], :header => ["First Name", "Email", "Address"], :readonly => true)
grid_for(:grid_2, :rows => 3, :header => ["First Name", "Email", "Address"], :readonly => false)
grid_for(:grid_1, :data => [["Prashant", "prashant@rediffmail.com", "9881457821"], ["Tushar", "tusharkakade@hotmail.com", "9887458264"], ["Kavita", "kavita@gmail.com", "8888854621"]], :default_focus_cell => [1,2])
grid_for(:grid_2, :readonly => "false", :grid_option => {:class => "game-levels no-focus"}, :rows_option => {:class => "row-wise-container"}, :cell_option => {:class => "col-lg-4 col-sm-4"})



module Grid
  class Grid
    def grid(:id, :data => {}, :header => {}, :rows, :columns, :readonly => true)
    end   

    def add_column(:grid_id, :data => {})
    end
  end
  class Rows

    def add_row(:grid_id, :row_count, :data => {})
    end

    def create_row(:grid_id, :row_count)
    end
  
    def fill_row(:row_index, :data => {})
    end

    def add_header_row(:grid_id, :header => {})
    end

    def generate_row_id(:grid_id)
    end

    def header_row()
    end

    def generate_header_row_id(:grid_id)
    end

    def get_row_index()
    end
  end

  class Cells
    def generate_cell_id(:row_id)
    end   

  end
end

class HtmlElement
  def initialize
    @id
    @class
    @tag_name =
    @is_closing_tag =

  end
  def to_html(&block)
      return_string = "<" + @tag_name + derive_attributes + ">"
  yield block
    if @is_closing_tag = true 
    @return_string =  @return_string + "</" + ....">"
  end
end

  def derive_attributes
    id=@id class= name=
  end

my_element = HtmlElement.new (id, class...)
my_element.to_html

class Grid < HtmlElement
  def init
  end
  def to_html(&block)
    super.to_html(block_attributes + role=